{
  "$id": "http://sciencegateways.org/SGCIResource",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Schema for an SGCI Resource",
  "additionalProperties": false,
  "type": "object",
  "required": [
    "id",
    "name",
    "resourceType",
    "resource"
  ],
  "properties": {
    "schemaVersion": {
      "type": "string",
      "description": "Version of the SGCI Resource Descriptions schema used for this description."
    },
    "id": {
      "description":"Unique identifier for the resource across all SGCI resource descriptions.",
      "$ref": "#/definitions/resourceId"
    },
    "name": {
      "description":"Human-readable, displayable name for the resource",
      "$ref": "#/definitions/resourceName"
    },
    "description": {
      "description" : "Detalied description of the resource.",
      "type": "string",
      "maxLength": 2048
    },
    "resourceType": {
      "description":"The type of resource",
      "type": "string",
      "enum": [
        "STORAGE",
        "COMPUTE"
      ]
    },
    "resource": {
      "description":"The resource object includes details about the storage and compute capabilities of the resource",
      "oneOf": [
        {
          "$ref": "#/definitions/storageDefinition"
        },
        {
          "$ref": "#/definitions/computeDefinition"
        }
      ]
    },
    "host": {
      "description":"Network addressable name (i.e., IP or hostname) to use when accessing the resource.",
      "$ref": "#/definitions/hostNameDefinition"
    },
    "connection": {
      "description":"The connection object includes additional details about pertaining to securely accessing the resource.",
      "$ref": "#/definitions/connectionDefinition"
    }
  },
  "definitions": {
    "resourceId": {
      "description":"Unique identifier for the resource across all SGCI resource descriptions.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "resourceName": {
      "description":"Human-readable, displayable name for the resource",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "hostNameDefinition": {
      "description":"label assigned to identify the device as an internet point of access",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "dirPath": {
      "description" : "the general form of the name of a file or directory, it specifies a unique location in the file system",
      "type": "string",
      "minLength": 1,
      "maxLength": 1024
    },
    "connectionDefinition": {
      "description":"label assigned to identify the device as an internet point of access",
      "type": "object",
      "required": [
        "connectionProtocol",
        "securityProtocol"
      ],
      "properties": {
        "connectionProtocol": {
          "type": "string",
          "enum": [
            "SSH",
            "GLOBUS",
            "HTTP",
            "SFTP",
            "SCP",
            "IRODS"
          ]
        },
        "securityProtocol": {
          "type": "string",
          "enum": [
            "PASSWORDS",
            "SSHKEYS",
            "X509",
            "OAUTH2"
          ]
        },
        "port": {
          "type": "integer"
        },
        "useProxy": {
          "type": "boolean"
        },
        "proxyHost": {
          "$ref": "#/definitions/hostNameDefinition"
        },
        "proxyPort": {
          "type": "integer"
        }
      }
    },
    "storageDefinition": {
      "$$description" : [
        "The Storage Resource Object is used to describe storage properties of the resource.",
        "All resources in the SGCI Resource Catalog are assumed to provide storage facilities, and as such,",
        "All resource descriptions must include values for the storage properties."
      ],
      "type": "object",
      "required": [
        "storageType",
        "fileSystem"
      ],
      "properties": {
        "storageType": {
          "type": "string",
          "$$description": [
            "High-level category to which this storage resource belongs.",
            "Determines additional properties that can be provided."
          ],
          "enum": [
            "POSIX",
            "S3",
            "OBJECT_STORE"
          ]
        },
        "connection": {
          "description": "The connection object includes additional details about pertaining to securely accessing the resource. When specified as part of the storage object, the connection details only apply when accessing the storage facilities of the resource.",
          "$ref": "#/definitions/connectionDefinition"
        },
        "fileSystem": {
          "description" : "The fileSystem object contains information about the paths available on the storage resource.",
          "$ref": "#/definitions/fileSystemDefinition"
        },
        "capacity": {
          "description" : "The capacity object describes the total available storage on the resource.",
          "type": "object",
          "properties": {
            "totalBytes": {
              "description":"The total bytes of storage available on the resource.",
              "type": "integer"
            }
          }
        },
        "defaultQuota": {
          "description" : "The defaultQuota object includes quota information about the available storage per",
          "type": "object",
          "properties": {
            "bytesPerUser": {
              "type": "integer"
            }
          }
        }
      }
    },
    "fileSystemDefinition": {
      "description":"The fileSystem object contains information about the paths available on the storage resource.",
      "type": "object",
      "properties": {
        "rootDir": {
          "description":"The path on the resource to use as the virtual root directory for all interactions with the resource. No interaction will happen outside of the rootDir path.",
          "$ref": "#/definitions/dirPath"
        },
        "homeDir": {
          "description":"The path on the resource, relative to rootDir, to use as the virtual home directory for all interactions with the resource.",
          "$ref": "#/definitions/dirPath"
        },
        "scratchDir": {
          "description":"The path on the resource, relative to rootDir, to use as the virtual scratch space; i.e., where running jobs should write to while executing.",
          "$ref": "#/definitions/dirPath"
        },
        "workDir": {
          "description":"The path on the resource, relative to rootDir, to use as the virtual directory TODO",
          "$ref": "#/definitions/dirPath"
        },
        "archiveDir": {
          "description":"The path on the resource, relative to rootDir, to use as the virtual directory to write job outputs to after execution completes.",
          "$ref": "#/definitions/dirPath"
        }
      }
    },
    "computeDefinition": {
      "description" : "The Compute Resource Object is used to describe computational properties of the resource. Not all resources in the SGCI Resource Catalog are assumed to provide compute facilities.",
      "type": "object",
      "oneOf": [
        {
          "required": [
            "schedulerType",
            "storageResource",
            "batchSystem"
          ]
        },
        {
          "required": [
            "schedulerType",
            "storageResource",
            "forkSystem"
          ]
        }
      ],
      "properties": {
        "schedulerType": {
          "type": "string",
          "enum": [
            "FORK",
            "BATCH",
            "ON_DEMAND"
          ]
        },
        "storageResource": {
          "$ref": "#/definitions/storageDefinition"
        },
        "connection": {
          "$ref": "#/definitions/connectionDefinition"
        },
        "executionCommands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/executionCommandDefinition"
          }
        },
        "batchSystem": {
          "$ref": "#/definitions/batchSystemDefinition"
        },
        "forkSystem": {
          "$ref": "#/definitions/forkSystemDefinition"
        }
      }
    },
    "executionCommandDefinition": {
      "type": "object",
      "required": [
        "commandType"
      ],
      "properties": {
        "commandType": {
          "type": "string",
          "examples": [
            "serial",
            "mpi",
            "openmp",
            "ccm"
          ]
        },
        "commandPrefix": {
          "type": "string",
          "examples": [
            "ibrun",
            "mpirun"
          ]
        },
        "moduleDependencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "batchSystemDefinition": {
      "type": "object",
      "required": [
        "jobManager"
      ],
      "properties": {
        "jobManager": {
          "type": "string",
          "enum": [
            "SLURM",
            "SGE",
            "PBS"
          ]
        },
        "commandPaths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/commandPathDefinition"
          }
        },
        "partitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/partitionDefinition"
          }
        }
      }
    },
    "commandPathDefinition": {
      "type": "object",
      "required": [
        "name",
        "path"
      ],
      "properties": {
        "name": {
          "type": "string",
          "examples": [
            "SUBMISSION",
            "JOB_MONITORING",
            "DELETION",
            "CHECK_JOB",
            "SHOW_QUEUE",
            "SHOW_RESERVATION",
            "SHOW_START"
          ]
        },
        "path": {
          "type": "string"
        }
      }
    },
    "partitionDefinition": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "examples": [
            "normal",
            "large-mem"
          ]
        },
        "totalNodes": {
          "type": "integer"
        },
        "nodeHardware": {
          "$ref": "#/definitions/nodeHardwareDefinition"
        },
        "computeQuotas": {
          "type": "object",
          "properties": {
            "maxJobsTotal": {
              "type": "integer"
            },
            "maxJobsPerUser": {
              "type": "integer"
            },
            "maxNodesPerJob": {
              "type": "integer"
            },
            "maxTimePerJob": {
              "type": "integer"
            },
            "maxMemoryPerJob": {
              "type": "string"
            },
            "maxCPUsPerJob": {
              "type": "integer"
            },
            "maxGPUsPerJob": {
              "type": "integer"
            }
          }
        }
      }
    },
    "forkSystemDefinition": {
      "type": "object",
      "required": [
        "systemType"
      ],
      "properties": {
        "systemType": {
          "type": "string",
          "enum": [
            "LINUX",
            "WINDOWS"
          ]
        },
        "version": {
          "type": "string"
        },
        "nodeHardware": {
          "$ref": "#/definitions/nodeHardwareDefinition"
        }
      }
    },
    "nodeHardwareDefinition": {
      "type": "object",
      "properties": {
        "cpuType": {
          "type": "string"
        },
        "cpuCount": {
          "type": "integer"
        },
        "gpuType": {
          "type": "string"
        },
        "gpuCount": {
          "type": "integer"
        },
        "memoryType": {
          "type": "string"
        },
        "memorySize": {
          "type": "string"
        }
      }
    }
  }
}
