{
  "$id": "http://sciencegateways.org/SGCIResource",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Schema for an SGCI Resource",
  "additionalProperties": false,
  "type": "object",
  "required": [
    "schemaVersion",
    "host",
    "name",
    "storageResources"
  ],
  "properties": {
    "schemaVersion": {
      "type": "string",
      "description": "Version of the SGCI Resource Descriptions schema used for this description."
    },
    "host": {
      "description": "Network addressable name (hostname) serving as a unique identifier for the resource across all SGCI resource descriptions.",
      "$ref": "#/definitions/hostName"
    },
    "name": {
      "description": "Human-readable, displayable name for the resource",
      "$ref": "#/definitions/resourceName"
    },
    "description": {
      "description": "Detalied description of the resource.",
      "type": "string",
      "maxLength": 2048
    },
    "connection": {
      "description": "The connection object includes additional details pertaining to securely accessing the resource.",
      "$ref": "#/definitions/connectionDefinition"
    },
    "storageResources": {
      "$ref": "#/definitions/storageDefinitionList"
    },
    "computeResources": {
      "$ref": "#/definitions/computeDefinitionList"
    }
  },
  "definitions": {
    "resourceName": {
      "description": "Human-readable, displayable name for the resource",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "hostName": {
      "description": "label assigned to identify the device as an internet point of access",
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "dirPath": {
      "description": "the general form of the name of a file or directory, it specifies a unique location in the file system",
      "type": "string",
      "minLength": 1,
      "maxLength": 1024
    },
    "connectionDefinition": {
      "description": "The connection object defines all parameters required to establish a connection with the resource",
      "type": "object",
      "required": [
        "connectionProtocol",
        "securityProtocol"
      ],
      "properties": {
        "connectionProtocol": {
          "description": "Communication protocol required to stablish a connection with the resources",
          "type": "string",
          "enum": [
            "SSH",
            "GLOBUS",
            "HTTP",
            "SFTP",
            "SCP",
            "IRODS"
          ]
        },
        "securityProtocol": {
          "description": "Cryptographic or access protocol enabled to access the resource",
          "type": "string",
          "enum": [
            "PASSWORDS",
            "SSHKEYS",
            "X509",
            "OAUTH2"
          ]
        },
        "port": {
          "description": "Communication endpoint",
          "type": "integer"
        },
        "useProxy": {
          "description": "Some resources require to tunnel the connection throught a proxy host",
          "type": "boolean"
        },
        "proxyHost": {
          "description":"The ProxyHost object includes details required to connect to the proxy tunneling",
          "$ref": "#/definitions/hostName"
        },
        "proxyPort": {
          "description": "Communication endpoint required by the proxy",
          "type": "integer"
        }
      }
    },
    "storageDefinitionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/storageDefinition"
      }
    },
    "computeDefinitionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/computeDefinition"
      }
    },
    "storageDefinition": {
      "description": "The storage object is used to describe storage properties of the resource. All resources in the SGCI Resource Catalog are assumed to provide storage facilities, and as such, All resource descriptions must include values for the storage properties.",
      "type": "object",
      "required": [
        "storageType",
        "fileSystem"
      ],
      "properties": {
        "storageType": {
          "type": "string",
          "description": "High-level category to which this storage resource belongs. Determines additional properties that can be provided.",
          "enum": [
            "POSIX",
            "S3"
          ]
        },
        "connection": {
          "description": "The connection object includes additional details pertaining to securely accessing the resource. When specified as part of the storage object, the connection details only apply when accessing the storage facilities of the resource.",
          "$ref": "#/definitions/connectionDefinition"
        },
        "fileSystem": {
          "description": "The fileSystem object contains information about the paths available on the storage resource.",
          "$ref": "#/definitions/fileSystemDefinition"
        },
        "capacity": {
          "description": "The capacity object describes the total available storage on the resource.",
          "type": "object",
          "properties": {
            "totalBytes": {
              "description":"The total bytes of storage available on the resource.",
              "type": "integer"
            }
          }
        },
        "defaultQuota": {
          "description" : "The defaultQuota object includes quota information about the available storage per",
          "type": "object",
          "properties": {
            "bytesPerUser": {
              "type": "integer"
            }
          }
        }
      }
    },
    "fileSystemDefinition": {
      "description":"The fileSystem object contains information about the paths available on the storage resource.",
      "type": "object",
      "properties": {
        "homeDir": {
          "description":"The path on the resource, relative to rootDir, to use as the virtual home directory for all interactions with the resource.",
          "$ref": "#/definitions/dirPath"
        },
        "scratchDir": {
          "description":"The path on the resource, relative to rootDir, to use as the virtual scratch space; i.e., where running jobs should write to while executing.",
          "$ref": "#/definitions/dirPath"
        }
      }
    },
    "computeDefinition": {
      "description" : "The Compute Resource Object is used to describe computational properties of the resource. Not all resources in the SGCI Resource Catalog are assumed to provide compute facilities.",
      "type": "object",
      "oneOf": [
        {
          "required": [
            "schedulerType",
            "batchSystem"
          ]
        },
        {
          "required": [
            "schedulerType",
            "forkSystem"
          ]
        }
      ],
      "properties": {
        "schedulerType": {
          "description": "Job scheduler configured on the resource",
          "type": "string",
          "enum": [
            "FORK",
            "BATCH",
            "ON_DEMAND"
          ]
        },
        "connection": {
          "description":"The connection object includes details about the storage and compute capabilities of the resource",
          "$ref": "#/definitions/connectionDefinition"
        },
        "executionCommands": {
          "description":"This list defines all the commands required to execute any command on the resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/executionCommandDefinition"
          }
        },
        "batchSystem": {
          "description":"The batchSystem object lists all parameters required by the batch scheduler system",
          "$ref": "#/definitions/batchSystemDefinition"
        },
        "forkSystem": {
          "description":"The forkSystem object lists all parameters required by the fork scheduler system",
          "$ref": "#/definitions/forkSystemDefinition"
        }
      }
    },
    "executionCommandDefinition": {
      "description":"The execution Command Object describes how a commnad should be executed on the resource",
      "type": "object",
      "required": [
        "commandType"
      ],
      "properties": {
        "commandType": {
          "description":"label that describe the type of command supported by the resource",
          "type": "string",
          "examples": [
            "serial",
            "mpi",
            "openmp",
            "ccm"
          ]
        },
        "commandPrefix": {
          "description":"command to be preappend to the command in order to be executed as the commandType, e.g mpi->mpirun ",
          "type": "string",
          "examples": [
            "ibrun",
            "mpirun"
          ]
        },
        "moduleDependencies": {
          "description":"list of modules to be loaded before execution of the command",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "batchSystemDefinition": {
      "type": "object",
      "required": [
        "jobManager"
      ],
      "properties": {
        "jobManager": {
          "description":"Job scheduler software installed on the resource no handle job requests",
          "type": "string",
          "enum": [
            "SLURM",
            "SGE",
            "PBS"
          ]
        },
        "commandPaths": {
          "description":"List of commands supported by the Batch System",
          "type": "array",
          "items": {
            "$ref": "#/definitions/commandPathDefinition"
          }
        },
        "partitions": {
          "description":"List of public partitions and queues installed on the Batch System",
          "type": "array",
          "items": {
            "$ref": "#/definitions/partitionDefinition"
          }
        }
      }
    },
    "commandPathDefinition": {
      "type": "object",
      "required": [
        "name",
        "path"
      ],
      "properties": {
        "name": {
          "description":"Label that defines the operation supported by the system",
          "type": "string",
          "examples": [
            "SUBMISSION",
            "JOB_MONITORING",
            "DELETION",
            "CHECK_JOB",
            "SHOW_QUEUE",
            "SHOW_RESERVATION",
            "SHOW_START"
          ]
        },
        "path": {
          "description":"Complete path to the command that executes the operation",
          "type": "string"
        }
      }
    },
    "partitionDefinition": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description":"This label represents a queue or partition in the job scheduler",
          "type": "string",
          "examples": [
            "normal",
            "large-mem"
          ]
        },
        "totalNodes": {
          "description":"Number of available nodes on this partition / queue",
          "type": "integer"
        },
        "nodeHardware": {
          "description":"The nodeHardware object includes detailed information of the node",
          "$ref": "#/definitions/nodeHardwareDefinition"
        },
        "computeQuotas": {
          "description":"queues or partition may have multiple restriction on the jobs allowed to run",
          "type": "object",
          "properties": {
            "maxJobsTotal": {
              "description":"Maximum number of allowed jobs actively running on the partition",
              "type": "integer"
            },
            "maxJobsPerUser": {
              "description":"Maximum number of allowed jobs actively running on the partition for a user",
              "type": "integer"
            },
            "maxNodesPerJob": {
              "description":"Maximum number of nodes allowed to be used by a job",
              "type": "integer"
            },
            "maxTimePerJob": {
              "description":"Maximum time a job can run without been killed",
              "type": "integer"
            },
            "maxMemoryPerJob": {
              "description":"Maximum memory allocated for a job",
              "type": "string"
            },
            "maxCPUsPerJob": {
              "description":"Maximum number of cpus allowed to be used by a job",
              "type": "integer"
            },
            "maxGPUsPerJob": {
              "description":"Maximum number of gpus allowed to be used by a job",
              "type": "integer"
            }
          }
        }
      }
    },
    "forkSystemDefinition": {
      "type": "object",
      "required": [
        "systemType"
      ],
      "properties": {
        "systemType": {
          "type": "string",
          "description":"OS installed on the resource",
          "enum": [
            "LINUX",
            "WINDOWS"
          ]
        },
        "version": {
          "description":"Version of OS installed on the resource",
          "type": "string"
        },
        "nodeHardware": {
          "description":"NodeHardware object contains details about the software installed on the resource",
          "$ref": "#/definitions/nodeHardwareDefinition"
        }
      }
    },
    "nodeHardwareDefinition": {
      "type": "object",
      "properties": {
        "cpuType": {
          "description":"Type of cpus installed on the resource",
          "type": "string",
          "examples": [
            "Haswell CPUs @ 2.60GHz",
            "Intel Xeon-E5"
          ]
        },
        "cpuCount": {
          "description":"Total number of cpus available on the resource",
          "type": "integer"
        },
        "gpuType": {
          "description":"Type of gpus installed on the resource",
          "type": "string",
          "examples" : [
            "NVIDIA Tesla P100",
            "NVIDIA Tesla M2090"
          ]
        },
        "gpuCount": {
          "description":"Total number of gpus available on the resource",
          "type": "integer"
        },
        "memoryType": {
          "description":"Type of memory installed on the resource",
          "type": "string"
        },
        "memorySize": {
          "description":"Total memory available on the resource",
          "type": "string",
          "examples" : [
            "64 GB"
          ]
        }
      }
    }
  }
}
